{
	"React TypeScript Component": {
	  "prefix": "rtc",
	  "body": [
		"import { cn } from '@/lib/utils'",
		"",
		"interface ${1:${TM_FILENAME_BASE}}Props {",
		"  className?: string",
		"}",
		"",
		"export const ${1:${TM_FILENAME_BASE}} = ({ className }: ${1:${TM_FILENAME_BASE}}Props) => {",
		"  return (",
		"    <div className={cn('$3', className)}>",
		"      <p>${2:${TM_FILENAME_BASE} Component}</p>",
		"    </div>",
		"  )",
		"}",
		"",
		"export default ${1:${TM_FILENAME_BASE}}",
		""
	  ],
	  "description": "React TypeScript Component with Tailwind"
	},
	"React TypeScript Ctx/Provider": {
		"prefix": "rtctxp",
		"body": [
			"import React, { createContext, useState } from 'react';",
			"",
			"interface ${1:${TM_FILENAME_BASE}}State {",
			"    \"testBit\": boolean",
			"}",
			"",
			"// Define the context shape",
			"interface ${1:${TM_FILENAME_BASE}}Type {",
			"  state: ${1:${TM_FILENAME_BASE}}State | undefined",
			"  toggleTestBit: () => void;",
			"}",
			"// Create the context",
			"export const ${1:${TM_FILENAME_BASE}} = createContext<${1:${TM_FILENAME_BASE}}Type | undefined>(undefined);",
			"// Provider component",
			"export const ${2:${TM_FILENAME_BASE}}Provider: React.FC<{ children: React.ReactNode }> = ({ ",
			"  children ",
			"}) => {",
			"  const [state, setState] = useState<${1:${TM_FILENAME_BASE}}State|undefined>(undefined);",
			"",
			"  const toggleTestBit = () => {",
			"    setState(currState => (",
			"        {testBit: !currState?.testBit}",
			"    ))",
			"  };",
			"",
			"  const value = {",
			"    state,",
			"    toggleTestBit",
			"  };",
			"",
			"  return <${1:${TM_FILENAME_BASE}}.Provider value={value}>{children}</${1:${TM_FILENAME_BASE}}.Provider>;",
			"};",
			"// Custom hook for using the context",
			"export const use${1:${TM_FILENAME_BASE}} = () => {",
			"    const context = useContext(${1:${TM_FILENAME_BASE}});",
			"    if (context === undefined) {",
			"      throw new Error('use${1:${TM_FILENAME_BASE}} must be used within a ${2:${TM_FILENAME_BASE}}Provider');",
			"    }",
			"    return context;",
			"};",	
			"",		
			"// Export types",
			"export type { ${1:${TM_FILENAME_BASE}} };",
		  ""
		],
		"description": "React TypeScript Context and Provider"
	  }
  }